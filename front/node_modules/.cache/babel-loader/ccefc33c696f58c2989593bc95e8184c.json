{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ldk0225\\\\Desktop\\\\full-stack\\\\front\\\\src\\\\pages\\\\mainBoard\\\\View\\\\joinView.tsx\";\nimport React, { useState } from 'react';\nimport '../../../resource/css/joinView.css';\nimport { getFormParam, getData } from '../../../common/module/form';\nimport JoinViewModel from '../ViewModel/joinViewModel';\nimport JoinVO from '../ValueObject/JoinVO';\nimport { observer } from 'mobx-react';\nconst JoinInput = observer(props => {\n  return /*#__PURE__*/React.createElement(\"input\", {\n    className: 'joinPage_input ' + props.errState,\n    type: props.type,\n    placeholder: props.placeholder,\n    name: props.name,\n    onChange: props.onChange,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }\n  });\n});\nconst JoinView = observer(() => {\n  const [msg, setMsg] = useState('');\n  const [css, setCss] = useState({\n    id: '',\n    passwrod: ''\n  });\n  let duple = '';\n\n  if (JoinViewModel.isDuple()) {\n    duple = '중복된 아이디가 존재합니다.';\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const valid = JoinViewModel.valid(getData(e));\n\n    if (valid === 'success') {\n      JoinViewModel.joinRequest(getFormParam(e, JoinVO));\n    } else if (valid === 'blank') {\n      setMsg('빈칸없이 입력해주세요.');\n      setCss({\n        id: '',\n        passwrod: ''\n      });\n    } else if (valid === 'password') {\n      setMsg('비밀번호를 확인해주세요.');\n      setCss({\n        id: '',\n        passwrod: 'duple'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joinPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"joinPage_h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"\\uACC4\\uC815 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"joinPage_h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"\\uACC4\\uC815 \\uC774\\uBA54\\uC77C\"), /*#__PURE__*/React.createElement(JoinInput, {\n    type: 'text',\n    placeholder: '이메일 주소 입력',\n    name: 'id',\n    valid: '아이디',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"joinPage_loingState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, msg), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"joinPage_loingState\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, duple), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"joinPage_h2 joinPage_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), /*#__PURE__*/React.createElement(JoinInput, {\n    type: 'password',\n    placeholder: '비밀번호(8~32자리)',\n    name: 'password',\n    errState: css.passwrod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(JoinInput, {\n    type: 'password',\n    placeholder: '비밀번호 재입력',\n    name: '_passwordRe',\n    errState: css.passwrod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"joinPage_h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"\\uB2C9\\uB124\\uC784\"), /*#__PURE__*/React.createElement(JoinInput, {\n    type: 'text',\n    placeholder: '닉네임을 입력해주세요.',\n    name: 'nickName',\n    valid: '닉네임',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"joinPage_submit\",\n    type: \"submit\",\n    value: \"\\uB2E4\\uC74C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })));\n});\nexport default JoinView;","map":{"version":3,"sources":["C:/Users/ldk0225/Desktop/full-stack/front/src/pages/mainBoard/View/joinView.tsx"],"names":["React","useState","getFormParam","getData","JoinViewModel","JoinVO","observer","JoinInput","props","errState","type","placeholder","name","onChange","JoinView","msg","setMsg","css","setCss","id","passwrod","duple","isDuple","onSubmit","e","preventDefault","valid","joinRequest"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport '../../../resource/css/joinView.css';\r\nimport {getFormParam, getData} from '../../../common/module/form';\r\nimport JoinViewModel from '../ViewModel/joinViewModel';\r\nimport JoinVO from '../ValueObject/JoinVO'\r\nimport {observer} from 'mobx-react';\r\n\r\nconst JoinInput = observer((props : any) => {\r\n    return <input className={'joinPage_input ' + props.errState} type={props.type} placeholder={props.placeholder} name={props.name} onChange={props.onChange} autoComplete=\"off\"/>\r\n});\r\n\r\nconst JoinView = observer(() => {\r\n    const [msg, setMsg] = useState('');\r\n    const [css, setCss] = useState({\r\n        id : '',\r\n        passwrod : ''\r\n    });\r\n    let duple:string='';\r\n    if(JoinViewModel.isDuple()) {\r\n        duple = '중복된 아이디가 존재합니다.';\r\n    }\r\n    \r\n    \r\n    const onSubmit = (e : any) : void => {\r\n        e.preventDefault();\r\n        const valid = JoinViewModel.valid(getData(e));\r\n        if(valid === 'success'){\r\n            JoinViewModel.joinRequest(getFormParam(e, JoinVO));\r\n            \r\n        } else if( valid === 'blank') {\r\n            setMsg('빈칸없이 입력해주세요.');\r\n            setCss({id : '', passwrod :''});\r\n        } \r\n        else if(valid === 'password') {\r\n            setMsg('비밀번호를 확인해주세요.');\r\n            setCss({id : '', passwrod :'duple'});\r\n        }\r\n    }\r\n    \r\n    return (\r\n    <div className=\"joinPage\">\r\n        <h1 className=\"joinPage_h1\">계정 정보를 입력해주세요</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <h2 className=\"joinPage_h2\">계정 이메일</h2>\r\n                <JoinInput type={'text'} placeholder={'이메일 주소 입력'} name={'id'} valid={'아이디'} />\r\n                <span className=\"joinPage_loingState\">{msg}</span>\r\n                <span className=\"joinPage_loingState\">{duple}</span>\r\n                <h2 className=\"joinPage_h2 joinPage_blank\">비밀번호</h2>\r\n                <JoinInput type={'password'} placeholder={'비밀번호(8~32자리)'} name={'password'} errState={css.passwrod} />\r\n                <JoinInput type={'password'} placeholder={'비밀번호 재입력'} name={'_passwordRe'} errState={css.passwrod} />\r\n\r\n                <h2 className=\"joinPage_h2\">닉네임</h2>\r\n                <JoinInput type={'text'} placeholder={'닉네임을 입력해주세요.'} name={'nickName'} valid={'닉네임'}/>\r\n\r\n                <input className=\"joinPage_submit\" type=\"submit\" value=\"다음\"/>\r\n            </form>\r\n    </div>\r\n    )\r\n});\r\n\r\nexport default JoinView;\r\n\r\n"]},"metadata":{},"sourceType":"module"}