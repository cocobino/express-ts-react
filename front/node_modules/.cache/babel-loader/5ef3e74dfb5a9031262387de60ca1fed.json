{"ast":null,"code":"import _applyDecoratedDescriptor from \"C:\\\\Users\\\\ldk0225\\\\Desktop\\\\full-stack\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _init, _class2, _temp;\n\nimport { observable } from \"mobx\";\nimport axios from \"axios\";\nimport loginRepository from \"../Repository/loginRepository\";\nlet LoginModel = (_class = (_temp = _class2 = class LoginModel {\n  static getInstance() {\n    if (!this._LoginModel) this._LoginModel = new LoginModel();\n    return this._LoginModel;\n  }\n\n  sendLoginData(loginData) {\n    axios.interceptors.request.use(function (config) {\n      return config;\n    }, function (error) {\n      return Promise.reject(error);\n    });\n    axios.interceptors.response.use(function (response) {\n      return response;\n    }, function (error) {\n      return Promise.reject(error);\n    });\n    loginRepository.sendLoginData(loginData).then(d => {\n      return d;\n    }).catch(err => {\n      new Error(err);\n    });\n    return false;\n  }\n\n}, _class2._LoginModel = void 0, _class2.isPossible = void 0, _temp), (_applyDecoratedDescriptor(_class, \"isPossible\", [observable], (_init = Object.getOwnPropertyDescriptor(_class, \"isPossible\"), _init = _init ? _init.value : undefined, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  initializer: function () {\n    return _init;\n  }\n}), _class)), _class);\nexport { LoginModel as default };","map":{"version":3,"sources":["C:/Users/ldk0225/Desktop/full-stack/front/src/pages/mainBoard/Model/loginModel.ts"],"names":["observable","axios","loginRepository","LoginModel","getInstance","_LoginModel","sendLoginData","loginData","interceptors","request","use","config","error","Promise","reject","response","then","d","catch","err","Error","isPossible"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAAwC,+BAAxC;IAEqBC,U,gCAAN,MAAMA,UAAN,CAAiB;AAI5B,SAAcC,WAAd,GAAuC;AACnC,QAAG,CAAC,KAAKC,WAAT,EAAsB,KAAKA,WAAL,GAAmB,IAAIF,UAAJ,EAAnB;AACtB,WAAO,KAAKE,WAAZ;AACH;;AAEDC,EAAAA,aAAa,CAACC,SAAD,EAA2B;AACpCN,IAAAA,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C,aAAOA,MAAP;AACH,KAFD,EAEG,UAAUC,KAAV,EAAiB;AAChB,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAJD;AAMAX,IAAAA,KAAK,CAACO,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAgC,UAAUK,QAAV,EAAoB;AAChD,aAAOA,QAAP;AACH,KAFD,EAEG,UAAUH,KAAV,EAAiB;AAChB,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAJD;AAMAV,IAAAA,eAAe,CAACI,aAAhB,CAA8BC,SAA9B,EACCS,IADD,CACOC,CAAD,IAAa;AACf,aAAOA,CAAP;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZ,UAAIC,KAAJ,CAAUD,GAAV;AACH,KAND;AAQA,WAAO,KAAP;AACH;;AA/B2B,C,UACbd,W,mBACYgB,U,qEAA1BrB,U;;;;;;;;SAFgBG,U","sourcesContent":["import { observable } from \"mobx\";\r\nimport axios from \"axios\";\r\nimport loginRepository, { ILogin } from \"../Repository/loginRepository\";\r\n\r\nexport default class LoginModel {\r\n    private static _LoginModel : LoginModel;\r\n    @observable private static isPossible : boolean;\r\n\r\n    public static getInstance() :LoginModel{\r\n        if(!this._LoginModel) this._LoginModel = new LoginModel;\r\n        return this._LoginModel;\r\n    }\r\n\r\n    sendLoginData(loginData : {} ) :boolean {\r\n        axios.interceptors.request.use(function (config) {\r\n            return config;\r\n        }, function (error) {\r\n            return Promise.reject(error);\r\n        });\r\n\r\n        axios.interceptors.response.use(function (response) {\r\n            return response;\r\n        }, function (error) {\r\n            return Promise.reject(error);\r\n        });\r\n\r\n        loginRepository.sendLoginData(loginData)\r\n        .then((d : any) => {\r\n            return d;\r\n        })\r\n        .catch((err) => {\r\n            new Error(err);\r\n        });\r\n\r\n        return false;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}