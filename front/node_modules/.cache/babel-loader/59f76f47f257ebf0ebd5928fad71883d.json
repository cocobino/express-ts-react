{"ast":null,"code":"import JoinRepository from \"../Repository/JoinRepository\";\nexport default class JoinModel {\n  constructor() {}\n\n  static get getInstance() {\n    if (!this._JoinModel) this._JoinModel = new JoinModel();\n    return this._JoinModel;\n  }\n\n  joinRequest(joinData) {\n    JoinRepository.joinRequest(joinData).then(d => {\n      if (d.data === 'duple') {\n        return;\n      } else {\n        window.location.href = \"/login\";\n      }\n    }).catch(err => {\n      new Error(err);\n    });\n  }\n\n  getIsDuplicated() {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        return resolve('중복');\n      }, 100);\n    });\n  }\n\n}\nJoinModel._JoinModel = void 0;","map":{"version":3,"sources":["C:/Users/ldk0225/Desktop/full-stack/front/src/pages/mainBoard/Model/joinModel.ts"],"names":["JoinRepository","JoinModel","constructor","getInstance","_JoinModel","joinRequest","joinData","then","d","data","window","location","href","catch","err","Error","getIsDuplicated","Promise","resolve","setTimeout"],"mappings":"AAAA,OAAOA,cAAP,MAAsC,8BAAtC;AAIA,eAAe,MAAMC,SAAN,CAAgB;AAGnBC,EAAAA,WAAR,GAAsB,CAAE;;AACxB,aAAkBC,WAAlB,GAAgC;AAC5B,QAAG,CAAC,KAAKC,UAAT,EAAoB,KAAKA,UAAL,GAAkB,IAAIH,SAAJ,EAAlB;AAEpB,WAAO,KAAKG,UAAZ;AACH;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAA0B;AACjCN,IAAAA,cAAc,CAACK,WAAf,CAA2BC,QAA3B,EACCC,IADD,CACOC,CAAD,IAAa;AACf,UAAGA,CAAC,CAACC,IAAF,KAAW,OAAd,EAAuB;AACnB;AACH,OAFD,MAEO;AACHC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,QAArB;AACH;AACJ,KAPD,EAQCC,KARD,CAQQC,GAAD,IAAS;AACZ,UAAIC,KAAJ,CAAUD,GAAV;AACH,KAVD;AAWH;;AAEDE,EAAAA,eAAe,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BC,MAAAA,UAAU,CAAC,MAAM;AACb,eAAOD,OAAO,CAAC,IAAD,CAAd;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KAJM,CAAP;AAKH;;AA9B0B;AAAVjB,S,CACHG,U","sourcesContent":["import JoinRepository, { IJoin } from \"../Repository/JoinRepository\";\r\nimport { observable } from \"mobx\";\r\nimport { resolve } from \"dns\";\r\n\r\nexport default class JoinModel {\r\n    public static _JoinModel: JoinModel;\r\n\r\n    private constructor() {}\r\n    public static get getInstance() {\r\n        if(!this._JoinModel)this._JoinModel = new JoinModel();\r\n\r\n        return this._JoinModel;\r\n    }\r\n\r\n    joinRequest(joinData : IJoin) : void {\r\n        JoinRepository.joinRequest(joinData)\r\n        .then((d : any) => {\r\n            if(d.data === 'duple') {\r\n                return \r\n            } else {\r\n                window.location.href=\"/login\";\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            new Error(err);\r\n        })\r\n    }\r\n\r\n    getIsDuplicated() {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                return resolve('중복');\r\n            }, 100);\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}