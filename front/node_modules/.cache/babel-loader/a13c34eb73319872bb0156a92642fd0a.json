{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ldk0225\\\\Desktop\\\\full-stack\\\\front\\\\src\\\\pages\\\\mainBoard\\\\View\\\\friendView.tsx\";\nimport React, { useState } from 'react';\nimport Header from '../../../common/organisms/header/header';\nimport FriendViewModel from '../ViewModel/friendViewModel';\nimport List from '../../../common/molecules/List/List';\nimport CustomDivLine from '../../../common/atoms/customDivLine/customDivLine';\nimport '../../../resource/css/friendView.css';\nimport UserDefaultImg from '../../../resource/image/userDefault.png';\nimport UserDefaultImg2 from '../../../resource/image/userDefault2.png';\nimport { observer } from 'mobx-react';\nimport Sidebar from '../../../common/organisms/sidebar/sidebar';\nimport Modal from '../../../common/organisms/Modal/Modal';\nconst ModalHeader = observer(() => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modalPage_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modalPage_header_closeBtn\",\n    type: \"button\",\n    onClick: opt.closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"modalPage_header_h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"\\uCE5C\\uAD6C\\uCD94\\uAC00\"));\n});\nconst friendView = observer(() => {\n  const [show, setShow] = useState(false);\n  const [msg, setMsg] = useState('친구 ID를 검색해서 추가하세요.'); //getFriendList\n\n  const getFriendList = FriendViewModel.getFriendList();\n  const drawFriendList = getFriendList.map((data, i) => /*#__PURE__*/React.createElement(List, {\n    key: i + 1,\n    userImage: UserDefaultImg,\n    name: data.name,\n    message: data.message,\n    url: '/chat',\n    type: 'friend',\n    time: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }));\n\n  const openModal = () => {\n    setShow(true);\n  };\n\n  const closeModal = () => {\n    setShow(false);\n  };\n\n  const param = {\n    title: '친구추가'\n  }; //tmp\n\n  const myPageList = /*#__PURE__*/React.createElement(List, {\n    key: 0,\n    userImage: UserDefaultImg2,\n    name: '이대경',\n    message: '대화명',\n    url: '/myPage',\n    type: 'myPage',\n    time: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: '친구',\n    placeholder: \"이름 검색\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mainpage_addFriendBtn\",\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mainpage_List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, myPageList, /*#__PURE__*/React.createElement(CustomDivLine, {\n    name: '친구',\n    count: getFriendList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), drawFriendList)), /*#__PURE__*/React.createElement(Modal, {\n    opt: {\n      show,\n      openModal,\n      closeModal,\n      msg\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n});\nexport default friendView;","map":{"version":3,"sources":["C:/Users/ldk0225/Desktop/full-stack/front/src/pages/mainBoard/View/friendView.tsx"],"names":["React","useState","Header","FriendViewModel","List","CustomDivLine","UserDefaultImg","UserDefaultImg2","observer","Sidebar","Modal","ModalHeader","opt","closeModal","friendView","show","setShow","msg","setMsg","getFriendList","drawFriendList","map","data","i","name","message","openModal","param","title","myPageList","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Header from '../../../common/organisms/header/header';\r\nimport FriendViewModel from '../ViewModel/friendViewModel';\r\nimport List from '../../../common/molecules/List/List';\r\nimport CustomDivLine from '../../../common/atoms/customDivLine/customDivLine';\r\nimport '../../../resource/css/friendView.css';\r\n\r\nimport UserDefaultImg from '../../../resource/image/userDefault.png';\r\nimport UserDefaultImg2 from '../../../resource/image/userDefault2.png';\r\nimport { observer } from 'mobx-react';\r\nimport { IFriend } from '../Repository/friendRepository';\r\nimport Sidebar from '../../../common/organisms/sidebar/sidebar';\r\nimport Modal from '../../../common/organisms/Modal/Modal';\r\nimport SearchFriendViewModel from '../ViewModel/serachFriendViewModel';\r\n\r\nconst ModalHeader = observer(() => {\r\n    return ( \r\n        \r\n            <div className=\"modalPage_header\">\r\n            <button className=\"modalPage_header_closeBtn\" type=\"button\" onClick={opt.closeModal}></button>\r\n            <h1 className=\"modalPage_header_h1\">친구추가</h1>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst friendView = observer(() => {\r\n    const [show, setShow] = useState(false);\r\n    const [msg, setMsg] = useState('친구 ID를 검색해서 추가하세요.');\r\n\r\n    //getFriendList\r\n    const getFriendList: any = FriendViewModel.getFriendList();\r\n    const drawFriendList = getFriendList.map(( data:IFriend, i:number ) => \r\n     <List key={i+1} userImage = {UserDefaultImg} name = {data.name} message = {data.message} url={'/chat'} type={'friend'} time={''}/>\r\n    );\r\n\r\n    const openModal = () : void => {\r\n        setShow(true);\r\n    }\r\n\r\n    const closeModal = () : void => {\r\n        setShow(false);\r\n    }\r\n\r\n    const param = {\r\n        title : '친구추가',\r\n\r\n    }\r\n       \r\n    //tmp\r\n    const myPageList = <List key={0} userImage ={UserDefaultImg2} name = {'이대경'} message={'대화명'} url={'/myPage'} type={'myPage'} time={''} />\r\n\r\n    return (\r\n        <>\r\n            <Header title={'친구'} placeholder={\"이름 검색\"}/>\r\n            <Sidebar />\r\n            <button className=\"mainpage_addFriendBtn\" onClick={openModal}></button>\r\n            <div className=\"mainpage\">\r\n                <ul className=\"mainpage_List\">\r\n                     {myPageList}\r\n                    <CustomDivLine name={'친구'} count={getFriendList.length}/>\r\n                    {drawFriendList}            \r\n                </ul>\r\n            </div>\r\n            <Modal opt={{show, openModal, closeModal, msg}}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default friendView;"]},"metadata":{},"sourceType":"module"}