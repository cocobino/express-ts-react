{"ast":null,"code":"import JoinModel from \"../Model/joinModel\";\n\nclass JoinViewModel {\n  constructor() {\n    this._JoinModel = void 0;\n    this._JoinModel = JoinModel.getInstance;\n  }\n\n  joinRequest(joinData) {\n    this._JoinModel.joinRequest(joinData);\n  }\n\n  async valid(data) {\n    debugger;\n\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      if (!data[Object.keys(data)[i]]) {\n        return Promise.resolve('blank');\n      }\n    }\n\n    if (data.password !== data._passwordRe) {\n      return Promise.resolve('password');\n    }\n\n    if (await this._JoinModel.joinRequest()) return Promise.resolve('duplicated');else return Promise.resolve('success');\n  }\n\n}\n\nexport default new JoinViewModel();","map":{"version":3,"sources":["C:/Users/ldk0225/Desktop/full-stack/front/src/pages/mainBoard/ViewModel/joinViewModel.ts"],"names":["JoinModel","JoinViewModel","constructor","_JoinModel","getInstance","joinRequest","joinData","valid","data","i","Object","keys","length","Promise","resolve","password","_passwordRe"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oBAAtB;;AAGA,MAAMC,aAAN,CAAoB;AAGhBC,EAAAA,WAAW,GAAG;AAAA,SAFNC,UAEM;AACV,SAAKA,UAAL,GAAkBH,SAAS,CAACI,WAA5B;AACH;;AAEDC,EAAAA,WAAW,CAACC,QAAD,EAA0B;AACjC,SAAKH,UAAL,CAAgBE,WAAhB,CAA4BC,QAA5B;AACH;;AAED,QAAMC,KAAN,CAAYC,IAAZ,EAAkB;AACd;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAAlC,EAA0CH,CAAC,EAA3C,EAA+C;AAC3C,UAAG,CAACD,IAAI,CAACE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBC,CAAlB,CAAD,CAAR,EAAgC;AAC5B,eAAOI,OAAO,CAACC,OAAR,CAAgB,OAAhB,CAAP;AACH;AACJ;;AACD,QAAGN,IAAI,CAACO,QAAL,KAAkBP,IAAI,CAACQ,WAA1B,EAAsC;AAClC,aAAOH,OAAO,CAACC,OAAR,CAAgB,UAAhB,CAAP;AACH;;AACD,QAAG,MAAM,KAAKX,UAAL,CAAgBE,WAAhB,EAAT,EAAwC,OAAOQ,OAAO,CAACC,OAAR,CAAgB,YAAhB,CAAP,CAAxC,KACK,OAAOD,OAAO,CAACC,OAAR,CAAgB,SAAhB,CAAP;AACR;;AAvBe;;AA2BpB,eAAe,IAAIb,aAAJ,EAAf","sourcesContent":["import JoinModel from \"../Model/joinModel\";\r\nimport { IJoin } from \"../Repository/JoinRepository\";\r\n\r\nclass JoinViewModel { \r\n    private _JoinModel: JoinModel;\r\n\r\n    constructor() {\r\n        this._JoinModel = JoinModel.getInstance;\r\n    }\r\n\r\n    joinRequest(joinData : IJoin) : void {\r\n        this._JoinModel.joinRequest(joinData);\r\n    }\r\n\r\n    async valid(data) {\r\n        debugger\r\n        for(let i=0; i< Object.keys(data).length; i++) {\r\n            if(!data[Object.keys(data)[i]]) {\r\n                return Promise.resolve('blank')\r\n            } \r\n        }\r\n        if(data.password !== data._passwordRe){\r\n            return Promise.resolve('password')\r\n        }\r\n        if(await this._JoinModel.joinRequest()) return Promise.resolve('duplicated')\r\n        else return Promise.resolve('success');\r\n    }\r\n\r\n}\r\n\r\nexport default new JoinViewModel();"]},"metadata":{},"sourceType":"module"}