{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ldk0225\\\\Desktop\\\\full-stack\\\\front\\\\src\\\\pages\\\\mainBoard\\\\View\\\\friendView.tsx\";\nimport React, { useState } from 'react';\nimport Header from '../../../common/organisms/header/header';\nimport FriendViewModel from '../ViewModel/friendViewModel';\nimport List from '../../../common/molecules/List/List';\nimport CustomDivLine from '../../../common/atoms/customDivLine/customDivLine';\nimport '../../../resource/css/friendView.css';\nimport UserDefaultImg from '../../../resource/image/userDefault.png';\nimport UserDefaultImg2 from '../../../resource/image/userDefault2.png';\nimport { observer } from 'mobx-react';\nimport Sidebar from '../../../common/organisms/sidebar/sidebar';\nimport Modal from '../../../common/organisms/Modal/Modal';\nimport SearchFriendViewModel from '../ViewModel/serachFriendViewModel';\nconst friendView = observer(() => {\n  const [show, setShow] = useState(false);\n  const [search, setSearch] = useState('');\n  const [msg, setMsg] = useState('친구를 검색하세요'); //getFriendList\n\n  const getFriendList = FriendViewModel.getFriendList();\n  const drawFriendList = getFriendList.map((data, i) => /*#__PURE__*/React.createElement(List, {\n    key: i + 1,\n    userImage: UserDefaultImg,\n    name: data.name,\n    message: data.message,\n    url: '/chat',\n    type: 'friend',\n    time: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }));\n\n  const openModal = e => {\n    setShow(true);\n  };\n\n  const closeModal = () => {\n    setShow(false);\n  };\n\n  const searchFriend = e => {\n    setSearch(e.target.value);\n  };\n\n  const serachOnKeyDown = e => {\n    if (e.key === 'Enter') {\n      SearchFriendViewModel.searchFriend(search);\n    }\n  }; //tmp\n\n\n  const myPageList = /*#__PURE__*/React.createElement(List, {\n    key: 0,\n    userImage: UserDefaultImg2,\n    name: '이대경',\n    message: '대화명',\n    url: '/myPage',\n    type: 'myPage',\n    time: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: '친구',\n    placeholder: \"이름 검색\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mainpage_addFriendBtn\",\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"mainpage_List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, myPageList, /*#__PURE__*/React.createElement(CustomDivLine, {\n    name: '친구',\n    count: getFriendList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), drawFriendList)), /*#__PURE__*/React.createElement(Modal, {\n    opt: {\n      show,\n      openModal,\n      closeModal,\n      searchFriend,\n      serachOnKeyDown,\n      msg\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n});\nexport default friendView;","map":{"version":3,"sources":["C:/Users/ldk0225/Desktop/full-stack/front/src/pages/mainBoard/View/friendView.tsx"],"names":["React","useState","Header","FriendViewModel","List","CustomDivLine","UserDefaultImg","UserDefaultImg2","observer","Sidebar","Modal","SearchFriendViewModel","friendView","show","setShow","search","setSearch","msg","setMsg","getFriendList","drawFriendList","map","data","i","name","message","openModal","e","closeModal","searchFriend","target","value","serachOnKeyDown","key","myPageList","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Header from '../../../common/organisms/header/header';\r\nimport FriendViewModel from '../ViewModel/friendViewModel';\r\nimport List from '../../../common/molecules/List/List';\r\nimport CustomDivLine from '../../../common/atoms/customDivLine/customDivLine';\r\nimport '../../../resource/css/friendView.css';\r\n\r\nimport UserDefaultImg from '../../../resource/image/userDefault.png';\r\nimport UserDefaultImg2 from '../../../resource/image/userDefault2.png';\r\nimport { observer } from 'mobx-react';\r\nimport { IFriend } from '../Repository/friendRepository';\r\nimport Sidebar from '../../../common/organisms/sidebar/sidebar';\r\nimport Modal from '../../../common/organisms/Modal/Modal';\r\nimport SearchFriendViewModel from '../ViewModel/serachFriendViewModel';\r\n\r\nconst friendView = observer(() => {\r\n    const [show, setShow] = useState(false);\r\n    const [search, setSearch] = useState('');\r\n    const [msg, setMsg] = useState('친구를 검색하세요');\r\n\r\n    //getFriendList\r\n    const getFriendList: any = FriendViewModel.getFriendList();\r\n    const drawFriendList = getFriendList.map(( data:IFriend, i:number ) => \r\n     <List key={i+1} userImage = {UserDefaultImg} name = {data.name} message = {data.message} url={'/chat'} type={'friend'} time={''}/>\r\n    );\r\n\r\n    const openModal = (e : any) : void => {\r\n        setShow(true);\r\n    }\r\n\r\n    const closeModal = () : void => {\r\n        setShow(false);\r\n    }\r\n\r\n    const searchFriend = (e) : void=> {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const serachOnKeyDown = (e: any) : void => {\r\n        if(e.key === 'Enter') {\r\n            SearchFriendViewModel.searchFriend(search);\r\n        }\r\n    }\r\n    //tmp\r\n    const myPageList = <List key={0} userImage ={UserDefaultImg2} name = {'이대경'} message={'대화명'} url={'/myPage'} type={'myPage'} time={''} />\r\n\r\n    return (\r\n        <>\r\n            <Header title={'친구'} placeholder={\"이름 검색\"}/>\r\n            <Sidebar />\r\n            <button className=\"mainpage_addFriendBtn\" onClick={openModal}></button>\r\n            <div className=\"mainpage\">\r\n                <ul className=\"mainpage_List\">\r\n                     {myPageList}\r\n                    <CustomDivLine name={'친구'} count={getFriendList.length}/>\r\n                    {drawFriendList}            \r\n                </ul>\r\n            </div>\r\n            <Modal opt={{show, openModal, closeModal, searchFriend, serachOnKeyDown, msg}}/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default friendView;"]},"metadata":{},"sourceType":"module"}